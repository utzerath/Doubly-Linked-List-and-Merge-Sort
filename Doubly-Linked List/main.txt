//Lydia K Fritz
//2/14/2019
//driver program for DLinkedList C++
//provided

#include "DLinkedList.h"
#include <iostream>
#include <fstream>
#include <string>

using namespace std;

string cleanUp(string str);

int main() {

	DLinkedList<string> lst1;
	DLinkedList<string> lst2;
	DLinkedList<string> lst3;

	ifstream fin("Text1.in");

	string str;

	while (fin >> str) {
		str = cleanUp(str);
		lst1.insertOrderUnique(str);
	}
	fin.close();

	fin.open("Text2.in");
	while (fin >> str) {
		str = cleanUp(str);
		lst2.insertOrderUnique(str);
	}

	cout << "List 1: " << lst1 << endl;
	cout << "List 2: " << lst2 << endl;

	
	//<string> combined = lst1.merge(lst3,lst2);

	cout << "\nAFTER MERGE" << endl;
	cout << "List 1: " << lst1 << endl;
	cout << "List 2: " << lst2 << endl;
	//cout << "\nCombined: " << combined << endl;


	return 0;
}

/**
* ASSIGNED
* @param str
* @return str in all lower case with LEADING and TRAILING non-alpha
* chars removed
*/
string cleanUp(string str) {
	for (int i = 0; i < str.size(); i++)
	{
		if (str[i] > 'Z' || str[i] < 'A' &&
			str[i] > 'z' || str[i] < 'a')
		{
			//delete unessecary characters
			str.erase(i, 1);
			i--;
		}
		if (str[i] >= 'A' && str[i] <= 'Z')
		{
			int l = str[i];
			str[i] = l + 32;

		}
	}

	return str;
}